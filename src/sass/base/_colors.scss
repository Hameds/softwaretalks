/// Color palette map
///
/// @group Colors
/// @author Mohammad Hasani
///
/// @prop {Color} primary - Used for the heading, the link, the button background color, etc.
/// @prop {Color} accent  - N/A
/// @prop {Color} black   - N/A
/// @prop {Color} gray-7  - N/A
/// @prop {Color} gray-6  - N/A
/// @prop {Color} gray-5  - N/A
/// @prop {Color} gray-4  - N/A
/// @prop {Color} gray-3  - N/A
/// @prop {Color} gray-2  - N/A
/// @prop {Color} gray-1  - Used for the sections background color
/// @prop {Color} white   - N/A
$colors: (
  primary: #f25d1d,
  accent: #a70d03,
  black: #0d0504,
  gray-7: #242424,
  gray-6: hsl(0, 0%, 14%),
  gray-5: hsl(0, 0%, 30%),
  gray-4: hsl(0, 0%, 60%),
  gray-3: hsl(0, 0%, 70%),
  gray-2: hsl(0, 0%, 93%),
  gray-1: #faf9f5,
  white: #ffffff,
);

/// Color palette helper function as a specific wrap arround map-get for $colors map
///
/// @group Colors
/// @author Mohammad Hasani
///
/// @parameter {String} $key - A key of $colors map
/// @return {Color} Specified color based on $colors map
@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @error "Unknown key '#{$key}' in $colors map.";
}
